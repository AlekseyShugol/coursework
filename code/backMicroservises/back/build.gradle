plugins {
    id 'java'
    id 'com.google.protobuf' version '0.9.4'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'org.service'
version = '0.0.2'

repositories {
    mavenCentral()
    maven { url 'https://repo1.maven.org/maven2' }
    maven { url 'https://plugins.gradle.org/m2/' }
}

dependencies {
    // Protobuf dependencies
    implementation 'io.grpc:grpc-all:1.40.0'
    implementation 'com.google.protobuf:protoc:3.23.0'
    implementation 'com.google.protobuf:protobuf-java-util:3.23.0'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'net.devh:grpc-spring-boot-starter:2.12.0.RELEASE'
    implementation 'net.devh:grpc-client-spring-boot-starter:3.1.0.RELEASE'

    // Spring Boot dependencies
    ext {
        springBoot = '3.2.4'
        springfox = '3.0.0'
        springdoc = '2.3.0'
        springSecurity = '6.2.4'
        mapstruct = '1.5.5.Final'
        mockitoCore = '5.11.0'
        lombok = '1.18.32'
        postgresql = '42.7.3'
        kafkaClients = '3.7.0'
        slf4j = '2.0.13'
        jjwt = '0.12.5'
        webjars = '0.58'
    }

    dependencies {
        // Spring Boot starter dependencies
        implementation "org.springframework.boot:spring-boot-starter-data-jpa:$springBoot"
        implementation "org.springframework.boot:spring-boot-starter-web:$springBoot"
        implementation "org.springframework.boot:spring-boot-starter-validation:$springBoot"
        testImplementation "org.springframework.boot:spring-boot-starter-test:$springBoot"
        compileOnly "org.projectlombok:lombok:$lombok"
        annotationProcessor "org.projectlombok:lombok:$lombok"
        implementation "org.postgresql:postgresql:$postgresql"
        implementation "org.mapstruct:mapstruct:$mapstruct"
        annotationProcessor "org.mapstruct:mapstruct-processor:$mapstruct"
        implementation "io.springfox:springfox-swagger2:$springfox"
        implementation "io.springfox:springfox-swagger-ui:$springfox"
        implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:$springdoc"
        testImplementation "org.mockito:mockito-core:$mockitoCore"
        implementation "org.apache.kafka:kafka-clients:$kafkaClients"
        implementation "org.webjars:webjars-locator-core:$webjars"
        implementation "org.springdoc:springdoc-openapi-ui:1.7.0"
        testImplementation "org.springframework.restdocs:spring-restdocs-mockmvc"
        implementation "org.springframework.boot:spring-boot-starter-logging"
        testImplementation "org.junit.jupiter:junit-jupiter-api:5.10.2"
        testImplementation "org.junit.platform:junit-platform-launcher:1.11.0-M2"
        testImplementation "org.junit.platform:junit-platform-suite-api:1.11.0-M2"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.10.2"
        testImplementation "org.junit.platform:junit-platform-suite:1.11.0-M2"
        implementation "com.hubspot.jackson:jackson-datatype-protobuf:0.9.13"
        implementation "org.slf4j:slf4j-api:$slf4j"
        implementation "org.springframework.kafka:spring-kafka"
        implementation 'org.mindrot:jbcrypt:0.4'
    }


    tasks.named('test') {
        useJUnitPlatform()
    }
}

sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

protobuf {
    protoc { artifact = 'com.google.protobuf:protoc:3.23.0' }

    plugins {
        grpc { artifact = 'io.grpc:protoc-gen-grpc-java:1.42.1' }
    }

    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}
